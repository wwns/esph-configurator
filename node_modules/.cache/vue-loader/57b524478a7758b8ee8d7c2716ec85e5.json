{"remainingRequest":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/esph-configurator/src/components/DigitalOutputConfig.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/pi/esph-configurator/src/components/DigitalOutputConfig.vue","mtime":1585121025000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport { digitalInputConfig, digitalOutputConfig } from '@/esphConfigTypes'\n\n@Component\nexport default class DigitalOutputConfig extends Vue {\n\n\n  @Prop({ type: Object, required: false }) private readonly value!: digitalOutputConfig;\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any) {\n    this.$emit('input', value)\n  }\n\n  public Add(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public Remove(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n\n}\n",{"version":3,"sources":["DigitalOutputConfig.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"DigitalOutputConfig.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"basic\">\n    <b-field label grouped>\n      <b-field label=\"GPIO\">\n        <b-numberinput v-model=\"value.g\" min=\"0\" max=\"1024\" controls-position=\"compact\" />\n      </b-field>\n\n      <b-field label=\"Active Low\">\n        <b-checkbox v-model=\"value.v\" :true-value=\"1\" :false-value=\"0\" />\n      </b-field>\n\n      <b-field label=\"Reset Time [s]\">\n        <b-field v-if=\"'i' in value\" grouped>\n          <b-numberinput v-model=\"value.i\" min=\"0\" max=\"10000000\" controls-position=\"compact\" step=\"0.01\" />\n          <b-button @click=\"()=>Remove('i')\">Rem Time</b-button>\n        </b-field>\n        <b-button v-else @click=\"()=>Add('i',1)\">Add</b-button>\n      </b-field>\n\n\n      <b-field label=\"Actions\">\n        <b-button type=\"is-danger\" @click=\"()=>$emit('remove')\">Remove</b-button>\n      </b-field>\n    </b-field>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport { digitalInputConfig, digitalOutputConfig } from '@/esphConfigTypes'\n\n@Component\nexport default class DigitalOutputConfig extends Vue {\n\n\n  @Prop({ type: Object, required: false }) private readonly value!: digitalOutputConfig;\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any) {\n    this.$emit('input', value)\n  }\n\n  public Add(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public Remove(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n\n}\n</script>\n\n\n<style scoped>\n</style>\n"]}]}