{"remainingRequest":"/home/pi/esph-configurator/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/esph-configurator/src/components/GeneralConfig.vue?vue&type=template&id=657cf94a&scoped=true&","dependencies":[{"path":"/home/pi/esph-configurator/src/components/GeneralConfig.vue","mtime":1585121094000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"basic\" },\n    [\n      _c(\n        \"b-field\",\n        { attrs: { label: \"UART\", horizontal: \"\" } },\n        [\n          _c(\"b-checkbox\", {\n            attrs: { \"true-value\": 1, \"false-value\": 0 },\n            model: {\n              value: _vm.value.o,\n              callback: function($$v) {\n                _vm.$set(_vm.value, \"o\", $$v)\n              },\n              expression: \"value.o\"\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"b-field\",\n        { attrs: { label: \"LED Pin\", horizontal: \"\" } },\n        [\n          \"l\" in _vm.value\n            ? _c(\n                \"b-field\",\n                { attrs: { grouped: \"\" } },\n                [\n                  _c(\"b-numberinput\", {\n                    attrs: {\n                      min: \"0\",\n                      max: \"1024\",\n                      \"controls-position\": \"compact\"\n                    },\n                    model: {\n                      value: _vm.value.l,\n                      callback: function($$v) {\n                        _vm.$set(_vm.value, \"l\", $$v)\n                      },\n                      expression: \"value.l\"\n                    }\n                  }),\n                  _c(\n                    \"b-button\",\n                    {\n                      on: {\n                        click: function() {\n                          return _vm.Remove(\"l\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"remove\")]\n                  )\n                ],\n                1\n              )\n            : _c(\n                \"b-button\",\n                {\n                  on: {\n                    click: function() {\n                      return _vm.Add(\"l\", 13)\n                    }\n                  }\n                },\n                [_vm._v(\"Add\")]\n              )\n        ],\n        1\n      ),\n      _vm.value.l\n        ? _c(\n            \"b-field\",\n            { attrs: { label: \"Inverted LED\", horizontal: \"\" } },\n            [\n              _c(\"b-checkbox\", {\n                attrs: { \"true-value\": 1, \"false-value\": 0 },\n                model: {\n                  value: _vm.value.i,\n                  callback: function($$v) {\n                    _vm.$set(_vm.value, \"i\", $$v)\n                  },\n                  expression: \"value.i\"\n                }\n              })\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\n        \"b-field\",\n        { attrs: { label: \"Filter \", horizontal: \"\" } },\n        [\n          \"f\" in _vm.value\n            ? _c(\n                \"b-field\",\n                { attrs: { grouped: \"\" } },\n                [\n                  _c(\"b-numberinput\", {\n                    attrs: {\n                      min: \"10\",\n                      max: \"210\",\n                      \"controls-position\": \"compact\"\n                    },\n                    model: {\n                      value: _vm.value.f,\n                      callback: function($$v) {\n                        _vm.$set(_vm.value, \"f\", $$v)\n                      },\n                      expression: \"value.f\"\n                    }\n                  }),\n                  _c(\n                    \"b-button\",\n                    {\n                      on: {\n                        click: function() {\n                          return _vm.Remove(\"f\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"remove\")]\n                  )\n                ],\n                1\n              )\n            : _c(\n                \"b-button\",\n                {\n                  on: {\n                    click: function() {\n                      return _vm.Add(\"f\", 10)\n                    }\n                  }\n                },\n                [_vm._v(\"Add\")]\n              )\n        ],\n        1\n      ),\n      _c(\n        \"b-field\",\n        { attrs: { label: \"Custom PWM f\", horizontal: \"\" } },\n        [\n          \"q\" in _vm.value\n            ? _c(\n                \"b-field\",\n                { attrs: { grouped: \"\" } },\n                [\n                  _c(\"b-numberinput\", {\n                    attrs: {\n                      min: \"1\",\n                      max: \"65535\",\n                      \"controls-position\": \"compact\"\n                    },\n                    model: {\n                      value: _vm.value[\"q\"],\n                      callback: function($$v) {\n                        _vm.$set(_vm.value, \"q\", $$v)\n                      },\n                      expression: \"value['q']\"\n                    }\n                  }),\n                  _c(\n                    \"b-button\",\n                    {\n                      on: {\n                        click: function() {\n                          return _vm.Remove(\"q\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"remove\")]\n                  )\n                ],\n                1\n              )\n            : _c(\n                \"b-button\",\n                {\n                  on: {\n                    click: function() {\n                      return _vm.Add(\"q\", 10)\n                    }\n                  }\n                },\n                [_vm._v(\"Add\")]\n              )\n        ],\n        1\n      ),\n      _c(\n        \"b-field\",\n        { attrs: { label: \"Setup Mode Time [s]\", horizontal: \"\" } },\n        [\n          \"m\" in _vm.value\n            ? _c(\n                \"b-field\",\n                { attrs: { grouped: \"\" } },\n                [\n                  _c(\"b-numberinput\", {\n                    attrs: {\n                      min: \"0\",\n                      max: \"999999\",\n                      \"controls-position\": \"compact\"\n                    },\n                    model: {\n                      value: _vm.value.m,\n                      callback: function($$v) {\n                        _vm.$set(_vm.value, \"m\", $$v)\n                      },\n                      expression: \"value.m\"\n                    }\n                  }),\n                  _c(\n                    \"b-button\",\n                    {\n                      on: {\n                        click: function() {\n                          return _vm.Remove(\"m\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"remove\")]\n                  )\n                ],\n                1\n              )\n            : _c(\n                \"b-button\",\n                {\n                  on: {\n                    click: function() {\n                      return _vm.Add(\"m\", 0)\n                    }\n                  }\n                },\n                [_vm._v(\"Add\")]\n              )\n        ],\n        1\n      ),\n      _vm.value.h\n        ? _c(\n            \"b-field\",\n            { attrs: { label: \"Enable HomeKit\", horizontal: \"\" } },\n            [\n              _c(\"b-checkbox\", {\n                attrs: { \"true-value\": 1, \"false-value\": 0 },\n                model: {\n                  value: _vm.value.h,\n                  callback: function($$v) {\n                    _vm.$set(_vm.value, \"h\", $$v)\n                  },\n                  expression: \"value.h\"\n                }\n              })\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}