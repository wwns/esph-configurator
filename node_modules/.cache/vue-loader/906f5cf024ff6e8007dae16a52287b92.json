{"remainingRequest":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/esph-configurator/src/components/GeneralConfig.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/pi/esph-configurator/src/components/GeneralConfig.vue","mtime":1585121094000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport { esphConfig, generalConfig } from '@/esphConfigTypes'\n\n@Component\nexport default class GeneralConfig extends Vue {\n\n  public generalConfig: generalConfig = {}\n\n  @Prop({ type: Object, required: false }) private readonly value!: generalConfig;\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any) {\n    this.$emit('input', value)\n  }\n\n  public Add(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public Remove(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n\n  mounted() {\n    const a: generalConfig = {\n      o: 1,\n      l: 13,\n      i: 1\n    }\n  }\n}\n",{"version":3,"sources":["GeneralConfig.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GeneralConfig.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"basic\">\n    <b-field label=\"UART\" horizontal>\n      <b-checkbox v-model=\"value.o\" :true-value=\"1\" :false-value=\"0\" />\n    </b-field>\n    <b-field label=\"LED Pin\" horizontal>\n      <b-field v-if=\"'l' in value\" grouped>\n        <b-numberinput v-model=\"value.l\" min=\"0\" max=\"1024\" controls-position=\"compact\" />\n        <b-button @click=\"()=>Remove('l')\">remove</b-button>\n      </b-field>\n      <b-button v-else @click=\"()=>Add('l',13)\">Add</b-button>\n    </b-field>\n\n    <b-field v-if=\"value.l\" label=\"Inverted LED\" horizontal>\n      <b-checkbox v-model=\"value.i\" :true-value=\"1\" :false-value=\"0\" />\n    </b-field>\n\n    <b-field label=\"Filter \" horizontal>\n      <b-field v-if=\"'f' in value\" grouped>\n        <b-numberinput v-model=\"value.f\" min=\"10\" max=\"210\" controls-position=\"compact\" />\n        <b-button @click=\"()=>Remove('f')\">remove</b-button>\n      </b-field>\n      <b-button v-else @click=\"()=>Add('f',10)\">Add</b-button>\n    </b-field>\n\n    <b-field label=\"Custom PWM f\" horizontal>\n      <b-field v-if=\"'q' in value\" grouped>\n        <b-numberinput v-model=\"value['q']\" min=\"1\" max=\"65535\" controls-position=\"compact\" />\n        <b-button @click=\"()=>Remove('q')\">remove</b-button>\n      </b-field>\n      <b-button v-else @click=\"()=>Add('q',10)\">Add</b-button>\n    </b-field>\n\n    <b-field label=\"Setup Mode Time [s]\" horizontal>\n      <b-field v-if=\"'m' in value\" grouped>\n        <b-numberinput v-model=\"value.m\" min=\"0\" max=\"999999\" controls-position=\"compact\" />\n        <b-button @click=\"()=>Remove('m')\">remove</b-button>\n      </b-field>\n      <b-button v-else @click=\"()=>Add('m',0)\">Add</b-button>\n    </b-field>\n\n    <b-field v-if=\"value.h\" label=\"Enable HomeKit\" horizontal>\n      <b-checkbox v-model=\"value.h\" :true-value=\"1\" :false-value=\"0\" />\n    </b-field>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport { esphConfig, generalConfig } from '@/esphConfigTypes'\n\n@Component\nexport default class GeneralConfig extends Vue {\n\n  public generalConfig: generalConfig = {}\n\n  @Prop({ type: Object, required: false }) private readonly value!: generalConfig;\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any) {\n    this.$emit('input', value)\n  }\n\n  public Add(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public Remove(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n\n  mounted() {\n    const a: generalConfig = {\n      o: 1,\n      l: 13,\n      i: 1\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n</style>\n"]}]}