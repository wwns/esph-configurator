{"remainingRequest":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/esph-configurator/src/components/Main.vue?vue&type=style&index=0&id=54d3a52e&scoped=true&lang=css&","dependencies":[{"path":"/home/pi/esph-configurator/src/components/Main.vue","mtime":1585127316280},{"path":"/home/pi/esph-configurator/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.accessory-config-container {\n  border: 1px solid #d2d2d2;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin-bottom: 2rem;\n}\n.descriptipn{\n  margin: .5em;\n  font-size: small;\n}\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1 class=\"title is-2\">JSON Configurator GUI.</h1>\n\n    <b-field label=\"sample config\" horizontal>\n      <b-field>\n        <b-select v-model=\"selectedConfig\" placeholder=\"Configuration\">\n          <option v-for=\"(option,i) in configs\" :key=\"i\" :value=\"i\">{{ option.title }}</option>\n        </b-select>\n\n        <p class=\"control\">\n          <b-button type=\"is-primary\" @click=\"()=>value = configs[selectedConfig].config\">Use Config</b-button>\n        </p>\n      </b-field>\n      <div class=\"descriptipn\">\n      \n        {{ configs[selectedConfig].description }}\n      </div>\n    </b-field>\n\n    <h3 class=\"title is-3\">General Config</h3>\n    <GeneralConfig v-model=\"value.c\" />\n    <hr />\n    <h1 class=\"title is-3\">Accessory Config</h1>\n    <BaseAccessoryConfig\n      v-for=\"(accessory,i) in value.a\"\n      :key=\"i\"\n      v-model=\"value.a[i]\"\n      class=\"accessory-config-container\"\n      @remove=\"()=>RemoveEl(value.a,i)\"\n    />\n    <b-field>\n      <b-select v-model=\"type\" placeholder=\"Switch\">\n        <option v-for=\"option in types\" :key=\"option.id\" :value=\"option.id\">{{ option.name }}</option>\n      </b-select>\n\n      <p class=\"control\">\n        <b-button\n          type=\"is-primary\"\n          @click=\"()=>AddEl(value.a,value.a.length,{t:type})\"\n        >Add Accessory</b-button>\n      </p>\n    </b-field>\n    <hr />\n    <jsonEditor v-model=\"value\" />\n\n    <hr style=\"margin-bottom:300px;\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport { esphConfig } from '@/esphConfigTypes'\nimport jsonEditor from '@/components/jsonEditor.vue'\nimport GeneralConfig from '@/components/GeneralConfig.vue'\nimport BaseAccessoryConfig from '@/components/BaseAccessoryConfig.vue'\n\nimport { types } from '@/accessoryTypes'\nimport { configurations } from '@/exampleConfigs'\n\n@Component({\n  components: {\n    jsonEditor,\n    GeneralConfig,\n    BaseAccessoryConfig\n  }\n})\nexport default class Main extends Vue {\n  public value: any = { c: {}, a: {} };\n\n  get types(){\n    return types.filter(t=>t.name)\n  } \n  public configs = configurations\n\n  public selectedConfig = 0\n  public type = 1\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any) {\n\n  }\n\n\n  mounted() {\n    this.value = { c: { o: 0 }, a: [] }\n  }\n\n  public Add(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public AddEl(arr: any[], index: number, value: any) {\n    this.$set(arr, index, value)\n  }\n  public RemoveProp(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n  public RemoveEl(arr: any[], index: number) {\n    this.$delete(arr, index)\n  }\n\n}\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.accessory-config-container {\n  border: 1px solid #d2d2d2;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  margin-bottom: 2rem;\n}\n.descriptipn{\n  margin: .5em;\n  font-size: small;\n}\n</style>\n"]}]}