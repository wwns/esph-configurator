{"remainingRequest":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/esph-configurator/src/components/FormIOs.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/pi/esph-configurator/src/components/FormIOs.vue","mtime":1585121059000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport DigitalInputConfig from '@/components/DigitalInputConfig.vue'\nimport DigitalOutputConfig from '@/components/DigitalOutputConfig.vue'\n\nimport { esphConfig, generalConfig, baseAccessoryConfig, switchAccessoryConfig } from '@/esphConfigTypes'\n\n@Component({\n  components: {\n    DigitalInputConfig,\n    DigitalOutputConfig\n  }\n})\nexport default class ButtonsAndState extends Vue {\n\n  @Prop({ type: Array, required: true, default: () => [] }) public readonly actionOutputs!: { id: number, name: string }[]\n  @Prop({ type: Array, required: true, default: () => [] }) public readonly actionInputs!: { id: number, name: string }[]\n\n\n  @Prop({ type: Object, required: true }) private readonly value!: any;\n\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any, oldValue: any) {\n\n    this.$emit('input', value)\n  }\n\n  public AddProp(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public AddEl(arr: any[], index: number, value: any) {\n    this.$set(arr, index, value)\n  }\n  public RemoveProp(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n  public RemoveEl(arr: any[], index: number) {\n    this.$delete(arr, index)\n  }\n\n}\n",{"version":3,"sources":["FormIOs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"FormIOs.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"basic\">\n    <h5 v-if=\"actionInputs.length > 0\" class=\"title is-5\">Digital Inputs</h5>\n\n    <div v-for=\"s in actionInputs\" :key=\"s.id + '-state'\" class=\"acessory-states\">\n      <b-field :label=\"`${s.name} State - Input`\" horizontal class=\"buttons-container\">\n        <div v-for=\"(b, i) in value[`f${s.id}`]\" :key=\"s.id+'-'+i\">\n          <DigitalInputConfig\n            v-model=\"value[`f${s.id}`][i]\"\n            @remove=\"()=>RemoveEl(value[`f${s.id}`], i)\"\n          />\n\n          <hr />\n        </div>\n\n        <b-button\n          v-if=\"value[`f${s.id}`]\"\n          @click=\"()=>AddEl(value[`f${s.id}`], value[`f${s.id}`].length, { g:0, t:1 })\"\n        >Add {{ s.name }} State - Input</b-button>\n        <b-button\n          v-else\n          @click=\"()=>{\n            AddProp(`f${s.id}`, [])\n            AddEl(value[`f${s.id}`], value[`f${s.id}`].length, { g:0, t:1 }) \n          }\"\n        >Add {{ s.name }} State - Input</b-button>\n      </b-field>\n      <hr />\n    </div>\n\n    <h5 class=\"title is-5\">Digital Outputs</h5>\n\n    <div v-for=\"s in actionOutputs\" :key=\"s.id+'-output'\" class=\"acessory-states\">\n      <b-field :label=\"`${s.name} - Outputs`\" horizontal class=\"buttons-container\">\n        <div v-if=\"value[s.id] && value[s.id].r\">\n          <div v-for=\"(b, i) in value[s.id].r\" :key=\"s.id+'-'+i\">\n            <DigitalOutputConfig\n              v-model=\"value[s.id].r[i]\"\n              @remove=\"()=>RemoveEl(value[s.id].r, i)\"\n            />\n            <hr />\n          </div>\n        </div>\n\n        <b-button\n          v-if=\"value[s.id] && value[s.id].r\"\n          @click=\"()=>AddEl(value[s.id].r, value[s.id].r.length, { g:0, v:0 })\"\n        >Add {{ s.name }} State - Outputs</b-button>\n        <b-button\n          v-else\n          @click=\"()=>{\n            AddProp(s.id, {r:[]})\n            AddEl(value[s.id].r, value[s.id].r.length, { g:0, v:0 }) \n          }\"\n        >Add {{ s.name }} State - Outputs</b-button>\n      </b-field>\n    </div>\n    <hr />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue, Watch } from 'vue-property-decorator'\n\nimport DigitalInputConfig from '@/components/DigitalInputConfig.vue'\nimport DigitalOutputConfig from '@/components/DigitalOutputConfig.vue'\n\nimport { esphConfig, generalConfig, baseAccessoryConfig, switchAccessoryConfig } from '@/esphConfigTypes'\n\n@Component({\n  components: {\n    DigitalInputConfig,\n    DigitalOutputConfig\n  }\n})\nexport default class ButtonsAndState extends Vue {\n\n  @Prop({ type: Array, required: true, default: () => [] }) public readonly actionOutputs!: { id: number, name: string }[]\n  @Prop({ type: Array, required: true, default: () => [] }) public readonly actionInputs!: { id: number, name: string }[]\n\n\n  @Prop({ type: Object, required: true }) private readonly value!: any;\n\n\n  @Watch('value', { immediate: true, deep: true })\n  onValueChanged(value: any, oldValue: any) {\n\n    this.$emit('input', value)\n  }\n\n  public AddProp(prop: string | number, value: any) {\n    this.$set(this.value, prop, value)\n  }\n  public AddEl(arr: any[], index: number, value: any) {\n    this.$set(arr, index, value)\n  }\n  public RemoveProp(prop: string | number) {\n    this.$delete(this.value, prop)\n  }\n  public RemoveEl(arr: any[], index: number) {\n    this.$delete(arr, index)\n  }\n\n}\n</script>\n\n\n<style >\n.buttons-container .field-body {\n  flex-wrap: wrap;\n}\n\n.buttons-container .field-body > .field {\n  width: 100%;\n}\n\n.button-remove {\n  margin-top: 1rem;\n}\n\n.acessory-states {\n  margin-bottom: 0.75rem;\n}\n</style>\n"]}]}