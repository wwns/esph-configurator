{"remainingRequest":"/home/pi/esph-configurator/node_modules/babel-loader/lib/index.js!/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/esph-configurator/node_modules/vue-json-editor/vue-json-editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pi/esph-configurator/node_modules/vue-json-editor/vue-json-editor.vue","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pi/esph-configurator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/pi/esph-configurator/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"./assets/jsoneditor.css\";\nimport JsonEditor from \"./assets/jsoneditor\";\nexport default {\n  // props: ['value', 'showBtns', 'mode', 'modes', 'lang'],\n  props: {\n    value: [String, Number, Object, Array],\n    showBtns: [Boolean],\n    expandedOnStart: {\n      type: Boolean,\n      default: false\n    },\n    mode: {\n      type: String,\n      default: \"tree\"\n    },\n    modes: {\n      type: Array,\n      default: function _default() {\n        return [\"tree\", \"code\", \"form\", \"text\", \"view\"];\n      }\n    },\n    lang: {\n      type: String,\n      default: \"en\"\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function () {\n        var _handler = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(val) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (this.internalChange) {\n                    _context.next = 4;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return this.setEditor(val);\n\n                case 3:\n                  this.expandAll();\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function handler(_x) {\n          return _handler.apply(this, arguments);\n        }\n\n        return handler;\n      }(),\n      deep: true\n    }\n  },\n  data: function data() {\n    return {\n      editor: null,\n      error: false,\n      json: this.value,\n      internalChange: false,\n      expandedModes: [\"tree\", \"view\", \"form\"],\n      locale: {\n        it: {\n          save: \"SALVA\"\n        },\n        en: {\n          save: \"SAVE\"\n        },\n        zh: {\n          save: \"保存\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    var self = this;\n    var options = {\n      mode: this.mode,\n      modes: this.modes,\n      // allowed modes\n      onChange: function onChange() {\n        console.log(\"Json editor change\");\n\n        try {\n          var json = self.editor.get();\n          self.json = json;\n          self.$emit(\"json-change\", json);\n          self.internalChange = true;\n          self.$emit(\"input\", json);\n          self.$nextTick(function () {\n            self.internalChange = false;\n          });\n        } catch (e) {\n          self.$emit(\"has-error\", e);\n        }\n      },\n      onModeChange: function onModeChange() {\n        self.expandAll();\n      }\n    };\n    this.editor = new JsonEditor(this.$el.querySelector(\".jsoneditor-vue\"), options, this.json);\n  },\n  methods: {\n    expandAll: function expandAll() {\n      if (this.expandedOnStart && this.expandedModes.includes(this.editor.getMode())) {\n        this.editor.expandAll();\n      }\n    },\n    onSave: function onSave() {\n      this.$emit(\"json-save\", this.json);\n    },\n    setEditor: function () {\n      var _setEditor = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(value) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.editor) this.editor.set(value);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setEditor(_x2) {\n        return _setEditor.apply(this, arguments);\n      }\n\n      return setEditor;\n    }()\n  }\n};",{"version":3,"sources":["vue-json-editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAeA;AACA,OAAA,UAAA;AACA,eAAA;AACA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,CADA;AAEA,IAAA,QAAA,EAAA,CAAA,OAAA,CAFA;AAGA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAHA;AAOA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAPA;AAWA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AACA;AAJA,KAXA;AAiBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GAFA;AAwBA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA;AAAA;AAAA;AAAA,iDAEA,GAFA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGA,KAAA,cAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAIA,KAAA,SAAA,CAAA,GAAA,CAJA;;AAAA;AAMA,uBAAA,SAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA,MAAA,IAAA,EAAA;AATA;AADA,GAxBA;AAqCA,EAAA,IArCA,kBAqCA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA,KAAA,KAHA;AAIA,MAAA,cAAA,EAAA,KAJA;AAKA,MAAA,aAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CALA;AAMA,MAAA,MAAA,EAAA;AACA,QAAA,EAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,EAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SAJA;AAOA,QAAA,EAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA;AAPA;AANA,KAAA;AAkBA,GAxDA;AAyDA,EAAA,OAzDA,qBAyDA;AACA,QAAA,IAAA,GAAA,IAAA;AAEA,QAAA,OAAA,GAAA;AACA,MAAA,IAAA,EAAA,KAAA,IADA;AAEA,MAAA,KAAA,EAAA,KAAA,KAFA;AAEA;AACA,MAAA,QAHA,sBAGA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,oBAAA;;AACA,YAAA;AACA,cAAA,IAAA,GAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,aAAA,EAAA,IAAA;AACA,UAAA,IAAA,CAAA,cAAA,GAAA,IAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA,UAAA,IAAA,CAAA,SAAA,CAAA,YAAA;AACA,YAAA,IAAA,CAAA,cAAA,GAAA,KAAA;AACA,WAFA;AAGA,SATA,CASA,OAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,WAAA,EAAA,CAAA;AACA;AACA,OAjBA;AAkBA,MAAA,YAlBA,0BAkBA;AACA,QAAA,IAAA,CAAA,SAAA;AACA;AApBA,KAAA;AAuBA,SAAA,MAAA,GAAA,IAAA,UAAA,CACA,KAAA,GAAA,CAAA,aAAA,CAAA,iBAAA,CADA,EAEA,OAFA,EAGA,KAAA,IAHA,CAAA;AAKA,GAxFA;AAyFA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UACA,KAAA,eAAA,IACA,KAAA,aAAA,CAAA,QAAA,CAAA,KAAA,MAAA,CAAA,OAAA,EAAA,CAFA,EAGA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,KARA;AAUA,IAAA,MAVA,oBAUA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,KAAA,IAAA;AACA,KAZA;AAcA,IAAA,SAdA;AAAA;AAAA;AAAA,gDAcA,KAdA;AAAA;AAAA;AAAA;AAAA;AAeA,oBAAA,KAAA,MAAA,EAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzFA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"jsoneditor-vue\"></div>\r\n    <div class=\"jsoneditor-btns\" v-if=\"showBtns!==false\">\r\n      <button\r\n        class=\"json-save-btn\"\r\n        type=\"button\"\r\n        @click=\"onSave()\"\r\n        :disabled=\"error\"\r\n      >{{ locale[lang].save }}</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"./assets/jsoneditor.css\";\r\nimport JsonEditor from \"./assets/jsoneditor\";\r\nexport default {\r\n  // props: ['value', 'showBtns', 'mode', 'modes', 'lang'],\r\n  props: {\r\n    value: [String, Number, Object, Array],\r\n    showBtns: [Boolean],\r\n    expandedOnStart: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    mode: {\r\n      type: String,\r\n      default: \"tree\"\r\n    },\r\n    modes: {\r\n      type: Array,\r\n      default: function() {\r\n        return [\"tree\", \"code\", \"form\", \"text\", \"view\"];\r\n      }\r\n    },\r\n    lang: {\r\n      type: String,\r\n      default: \"en\"\r\n    }\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      async handler(val) {\r\n        if (!this.internalChange) {\r\n          await this.setEditor(val);\r\n\r\n          this.expandAll();\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      editor: null,\r\n      error: false,\r\n      json: this.value,\r\n      internalChange: false,\r\n      expandedModes: [\"tree\", \"view\", \"form\"],\r\n      locale: {\r\n        it: {\r\n          save: \"SALVA\"\r\n        },\r\n        en: {\r\n          save: \"SAVE\"\r\n        },\r\n        zh: {\r\n          save: \"保存\"\r\n        }\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    let self = this;\r\n\r\n    let options = {\r\n      mode: this.mode,\r\n      modes: this.modes, // allowed modes\r\n      onChange() {\r\n        console.log(\"Json editor change\");\r\n        try {\r\n          let json = self.editor.get();\r\n          self.json = json;\r\n          self.$emit(\"json-change\", json);\r\n          self.internalChange = true;\r\n          self.$emit(\"input\", json);\r\n          self.$nextTick(function() {\r\n            self.internalChange = false;\r\n          });\r\n        } catch (e) {\r\n          self.$emit(\"has-error\", e);\r\n        }\r\n      },\r\n      onModeChange() {\r\n        self.expandAll();\r\n      }\r\n    };\r\n\r\n    this.editor = new JsonEditor(\r\n      this.$el.querySelector(\".jsoneditor-vue\"),\r\n      options,\r\n      this.json\r\n    );\r\n  },\r\n  methods: {\r\n    expandAll() {\r\n      if (\r\n        this.expandedOnStart &&\r\n        this.expandedModes.includes(this.editor.getMode())\r\n      ) {\r\n        this.editor.expandAll();\r\n      }\r\n    },\r\n\r\n    onSave() {\r\n      this.$emit(\"json-save\", this.json);\r\n    },\r\n\r\n    async setEditor(value) {\r\n      if (this.editor) this.editor.set(value);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .ace_line_group {\r\n    text-align: left;\r\n  }\r\n  .json-editor-container {\r\n    display: flex;\r\n    width: 100%;\r\n  }\r\n  .json-editor-container .tree-mode {\r\n    width: 50%;\r\n  }\r\n  .json-editor-container .code-mode {\r\n    flex-grow: 1;\r\n  }\r\n  .jsoneditor-btns{\r\n    text-align: center;\r\n    margin-top:10px;\r\n  }\r\n  .jsoneditor-vue .jsoneditor-outer{\r\n    min-height:150px;\r\n  }\r\n  .jsoneditor-vue div.jsoneditor-tree{\r\n    min-height: 350px;\r\n  }\r\n  .json-save-btn{\r\n    background-color: #20A0FF;\r\n    border: none;\r\n    color:#fff;\r\n    padding:5px 10px;\r\n    border-radius: 5px;\r\n  }\r\n  .json-save-btn:focus{\r\n    outline: none;\r\n  }\r\n  .json-save-btn[disabled]{\r\n    background-color: #1D8CE0;\r\n  }\r\n  code {\r\n    background-color: #f5f5f5;\r\n  }\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-json-editor"}]}